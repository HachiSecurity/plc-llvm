name: build

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build.yml'
      - "compiler/**"
      - "stack*.yaml"
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Install Haskell
        id: "install-haskell"
        uses: haskell/actions/setup@v1
        with:
          ghc-version: "8.10.4"
          enable-stack: true
          stack-version: "latest"

      - name: Install system dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update && sudo apt-get install -y libsodium-dev libgmp-dev
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 12

      - name: Install system dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install libsodium gmp llvm@12
          echo "/usr/local/opt/llvm@12/bin" >> $GITHUB_PATH

      - name: Cache .stack
        uses: actions/cache@v2
        with:
          path: ${{ steps.install-haskell.outputs.stack-root }}
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('stack.yaml') }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          stack --no-terminal build --only-dependencies --test --bench --haddock --fast --system-ghc

      - name: Build and install
        run: |
          mkdir -p ./bin
          cp ./compiler/rts/rts.c ./bin/rts.c
          mkdir -p ./bin/tiny_sha3
          cp -r ./compiler/rts/tiny_sha3 ./bin/
          stack --no-terminal build --test --bench --haddock --fast --system-ghc --no-run-tests --no-run-benchmarks --copy-bins --local-bin-path=./bin/
          tar acvf plc-llvm.tar.gz -C bin .

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: plc-llvm-${{ runner.os }}.tar.gz
          path: './plc-llvm.tar.gz'
          if-no-files-found: error

      - name: Run tests
        run: |
          stack --no-terminal build --test --fast --system-ghc --test-arguments='--xml=plc-llvm.xml'

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: compiler/plc-llvm.xml
          check_name: 'tests (${{ matrix.os }})'
          comment_title: 'Test results (${{ matrix.os }})'
          fail_on: 'test failures'

      - name: Upload release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'plc-llvm.tar.gz'
          asset_name: 'plc-llvm-${{ runner.os }}.tar.gz'
          tag: 'latest-plc-llvm'
          overwrite: true

      - name: Publish documentation
        if: ${{ github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest' }}
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: haddock
          folder: docs

      # - name: Run benchmark
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: |
      #     stack --no-terminal build --bench --fast --system-ghc
